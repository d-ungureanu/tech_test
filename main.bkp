provider "aws" {
    region = "eu-west-2"
}

resource "aws_vpc" "terraform_daniel_testing_webserver_vpc_tf" {
    cidr_block = "10.203.0.0/16"
    tags = {
        Name = "terraform_daniel_testing_webserver_vpc"
    }
}

resource "aws_subnet" "terraform_daniel_testing_webserver_subnet_primary_tf" {
    vpc_id = aws_vpc.terraform_daniel_testing_webserver_vpc_tf.id
    cidr_block = "10.203.1.0/24"

    tags = {
        Name = "terraform_daniel_testing_webserver_subnet_primary"
    }
}

resource "aws_subnet" "terraform_daniel_testing_webserver_subnet_secondary_tf" {
    vpc_id = aws_vpc.terraform_daniel_testing_webserver_vpc_tf.id
    cidr_block = "10.203.2.0/24"

    tags = {
        Name = "terraform_daniel_testing_webserver_subnet_secondary"
    }
}

resource "aws_internet_gateway" "terraform_daniel_testing_webserver_igw_tf" {
    vpc_id = aws_vpc.terraform_daniel_testing_webserver_vpc_tf.id

    tags = {
        Name = "terraform_daniel_testing_webserver_igw"
    }
}

resource "aws_route_table" "terraform_daniel_testing_webserver_rt_public_tf" {
    vpc_id = aws_vpc.terraform_daniel_testing_webserver_vpc_tf.id

    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = aws_internet_gateway.terraform_daniel_testing_webserver_igw_tf.id
    }

    tags ={
        Name = "terraform_daniel_testing_webserver_rt_public"
    }
}

resource "aws_route_table_association" "terraform_daniel_testing_webserver_rt_assoc_public_tf" {
    subnet_id = aws_subnet.terraform_daniel_testing_webserver_subnet_primary_tf.id
    route_table_id = aws_route_table.terraform_daniel_testing_webserver_rt_public_tf.id
}

resource "aws_network_acl" "terraform_daniel_testing_webserver_nacl_public_tf" {
    vpc_id = aws_vpc.terraform_daniel_testing_webserver_vpc_tf.id

    ingress = {
      rule_no = 100
      from_port = 22
      to_port = 22
      cidr_block = "0.0.0.0/0"
      protocol = "tcp"
      action = "allow"
    } 
}

resource "aws_security_group" "terraform_daniel_testing_webserver_sg_tf" {
    name = "terraform_daniel_testing_webserver_sg"

    ingress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    egress {
        from_port = 0
        to_port = 0
        protocol = -1
        cidr_blocks = ["0.0.0.0/0"]
    }

    tags = {
      Name = "terraform_daniel_testing_webserver_sg"
    }
}

resource "aws_instance" "terraform_daniel_testing_webserver_tf" {
    ami = "ami-0bd2099338bc55e6d"
    instance_type = "t2.micro"
    key_name = "EC2 Tutorial"
    vpc_security_group_ids = [aws_security_group.terraform_daniel_testing_webserver_sg_tf.id]
    tags = {
      Name = "terraform_daniel_testing_webserver"
    }
}